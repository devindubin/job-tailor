{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devin\\\\Desktop\\\\OneDev\\\\job-tailor\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n/* global chrome */\n\nimport JobDescriptionPreview from \"./components/JobDescriptionPreview\";\nimport Button from \"./components/Button\";\nimport Output from \"./components/Output\";\nimport Header from \"./components/Header\";\nimport Window from \"./components/Window\";\nimport FileUpload from \"./components/FileUpload\";\nimport { useState, createContext } from \"react\";\n\n// Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const JobContext = /*#__PURE__*/createContext(\"\");\n\n//TODO: Create header element\n/*\nHeader needs a logo\nmaybe a reference to the file name of the reference resume\n*/\n\nfunction App() {\n  _s();\n  // States\n  const [jobDescription, setJobDescription] = useState(\"JD Placeholder\");\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [file, setFile] = useState();\n  const [uploadedFile, setUploadedFile] = useState();\n  const [fileError, setFileError] = useState();\n  //state for finished cover letter before it can be downloaded\n  const [bufferForDownload, setBufferForDownload] = useState();\n  const [downloadDisabled, setDownloadDisabled] = useState(true);\n  // Button Functions\n  const parseJobData = async () => {\n    const descriptionLength = 100;\n    try {\n      //TODO: Handle possible error\n      const {\n        parsedJobDescription,\n        parsedJobTitle,\n        error\n      } = await chrome.runtime.sendMessage({\n        action: \"parse-job-description\",\n        target: \"content\"\n      });\n      if (parsedJobDescription.length > descriptionLength) {\n        const firstPart = parsedJobDescription.slice(0, descriptionLength / 2);\n        const lastPart = parsedJobDescription.slice(parsedJobDescription.length - descriptionLength / 2, -1);\n        setJobDescription(firstPart + \" ... \" + lastPart);\n      } else {\n        setJobDescription(parsedJobDescription);\n      }\n      setJobTitle(parsedJobTitle);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const generateDocument = async () => {\n    const url = \"http://localhost:5000/chat\";\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: {\n          jobTitle: jobTitle,\n          jobDescription: jobDescription,\n          fileId: uploadedFile\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const blob = await response.blob();\n      setBufferForDownload(blob);\n      setDownloadDisabled(false);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  const downloadLetter = () => {\n    const url = window.URL.createObjectURL(bufferForDownload);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", \"placeholder.docx\");\n    document.body.appendChild(link);\n    link.click();\n    link.parentNode.removeChild(link);\n    setDownloadDisabled(true);\n  };\n  const testOnClick = content => {\n    console.log(content);\n    parseJobData();\n  };\n  const isdisabled = downloadDisabled ? true : false;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(JobContext.Provider, {\n      value: {\n        jobDescription,\n        jobTitle,\n        parseJobData,\n        file,\n        setFile,\n        uploadedFile,\n        setUploadedFile,\n        fileError,\n        setFileError\n      },\n      children: /*#__PURE__*/_jsxDEV(Window, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(JobDescriptionPreview, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          onClick: parseJobData,\n          content: \"Parse Job Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          onClick: generateDocument,\n          content: \"Generate Document\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          disabled: isdisabled,\n          onClick: downloadLetter,\n          content: \"Download Letter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FileUpload, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Z2PymuUG8lVcJesqcLMXZCEaEzY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["JobDescriptionPreview","Button","Output","Header","Window","FileUpload","useState","createContext","jsxDEV","_jsxDEV","JobContext","App","_s","jobDescription","setJobDescription","jobTitle","setJobTitle","file","setFile","uploadedFile","setUploadedFile","fileError","setFileError","bufferForDownload","setBufferForDownload","downloadDisabled","setDownloadDisabled","parseJobData","descriptionLength","parsedJobDescription","parsedJobTitle","error","chrome","runtime","sendMessage","action","target","length","firstPart","slice","lastPart","console","generateDocument","url","response","fetch","method","body","fileId","ok","Error","blob","message","downloadLetter","window","URL","createObjectURL","link","document","createElement","href","setAttribute","appendChild","click","parentNode","removeChild","testOnClick","content","log","isdisabled","className","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Devin/Desktop/OneDev/job-tailor/frontend/src/App.jsx"],"sourcesContent":["/* global chrome */\n\nimport JobDescriptionPreview from \"./components/JobDescriptionPreview\";\nimport Button from \"./components/Button\";\nimport Output from \"./components/Output\";\nimport Header from \"./components/Header\";\nimport Window from \"./components/Window\";\nimport FileUpload from \"./components/FileUpload\";\nimport { useState, createContext } from \"react\";\n\n// Context\nexport const JobContext = createContext(\"\");\n\n//TODO: Create header element\n/*\nHeader needs a logo\nmaybe a reference to the file name of the reference resume\n*/\n\nfunction App() {\n  // States\n  const [jobDescription, setJobDescription] = useState(\"JD Placeholder\");\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [file, setFile] = useState();\n  const [uploadedFile, setUploadedFile] = useState();\n  const [fileError, setFileError] = useState();\n  //state for finished cover letter before it can be downloaded\n  const [bufferForDownload, setBufferForDownload] = useState();\n  const [downloadDisabled, setDownloadDisabled] = useState(true);\n  // Button Functions\n  const parseJobData = async () => {\n    const descriptionLength = 100;\n    try {\n      //TODO: Handle possible error\n      const { parsedJobDescription, parsedJobTitle, error } =\n        await chrome.runtime.sendMessage({\n          action: \"parse-job-description\",\n          target: \"content\",\n        });\n\n      if (parsedJobDescription.length > descriptionLength) {\n        const firstPart = parsedJobDescription.slice(0, descriptionLength / 2);\n        const lastPart = parsedJobDescription.slice(\n          parsedJobDescription.length - descriptionLength / 2,\n          -1\n        );\n\n        setJobDescription(firstPart + \" ... \" + lastPart);\n      } else {\n        setJobDescription(parsedJobDescription);\n      }\n      setJobTitle(parsedJobTitle);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const generateDocument = async () => {\n    const url = \"http://localhost:5000/chat\";\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: {\n          jobTitle: jobTitle,\n          jobDescription: jobDescription,\n          fileId: uploadedFile,\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const blob = await response.blob();\n      setBufferForDownload(blob);\n      setDownloadDisabled(false);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const downloadLetter = () => {\n    const url = window.URL.createObjectURL(bufferForDownload);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", \"placeholder.docx\");\n\n    document.body.appendChild(link);\n    link.click();\n    link.parentNode.removeChild(link);\n    setDownloadDisabled(true);\n  };\n\n  const testOnClick = (content) => {\n    console.log(content);\n    parseJobData();\n  };\n\n  const isdisabled = downloadDisabled ? true : false;\n\n  return (\n    <div className=\"App\">\n      <JobContext.Provider\n        value={{\n          jobDescription,\n          jobTitle,\n          parseJobData,\n          file,\n          setFile,\n          uploadedFile,\n          setUploadedFile,\n          fileError,\n          setFileError,\n        }}\n      >\n        <Window>\n          <Header />\n          <JobDescriptionPreview />{\" \"}\n          {/* Job description  preview should show the first and last 25 characters of the jd just to confirm it is reading the right content*/}\n          <Button onClick={parseJobData} content=\"Parse Job Details\" />{\" \"}\n          {/* Locate description button */}\n          <Button onClick={generateDocument} content=\"Generate Document\" />{\" \"}\n          {/* generate cover letter */}\n          <Button\n            disabled={isdisabled}\n            onClick={downloadLetter}\n            content=\"Download Letter\"\n          ></Button>\n          {/* Listen for cover letter creation and link  when completed */}\n          <FileUpload />\n        </Window>\n      </JobContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}